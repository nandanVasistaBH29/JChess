package com.chess.engine.piece;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import com.chess.engine.Alliance;
import com.chess.engine.board.Board;
import com.chess.engine.board.BoardUtils;
import com.chess.engine.board.Move;

public class Bishop  extends Piece{
	private final static int[] CANDIDATE_NEW_COORDINATES = { -9,-7,7,9 };
	public Bishop(int piecePosition, Alliance pieceAlliance) {
		super(piecePosition, pieceAlliance);
	}

	@Override
	public Collection<Move> calculateLegalMoves(Board board) {
		final List<Move> legalMoves=new ArrayList<>();
		for(final int candidateCoordinateOffset:CANDIDATE_NEW_COORDINATES) {
			int candidateDestination=this.piecePosition;
			while(BoardUtils.isValidTileCoordinate(candidateDestination)) {
				candidateDestination+=candidateCoordinateOffset;
			}
		}
	}

}
