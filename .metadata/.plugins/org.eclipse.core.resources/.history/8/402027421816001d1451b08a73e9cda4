package com.chess.engine.player;

import java.util.Collection;

import com.chess.engine.board.Board;
import com.chess.engine.board.Move;
import com.chess.engine.piece.King;
import com.chess.engine.piece.Piece;
import com.chess.engine.piece.Piece.PieceType;

public abstract class Player {

	protected final Board board;
	protected final King playerKing;
	// we need to specially keep track of king
	// to detect checks to the king
	protected final Collection<Move> legalMoves;

	public Player(final Board board, final Collection<Move> legalMoves, final Collection<Move> opponentLegalMoves) {
		this.board = board;
		this.playerKing = establishKing();
		this.legalMoves = legalMoves;
	}

	private King establishKing() {
		for (final Piece piece : getActivePieces()) {
			if (piece.getPieceType().isKing()) {
				return (King) piece;
			}
		}
		throw new RuntimeException("Shouldn't reach here");
	}

	protected abstract Collection<Piece> getActivePieces();
	public abstract Alliance getAlliance();

}
